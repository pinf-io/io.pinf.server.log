<html>
    <head>
        <link href="/log.css" rel="stylesheet" type="text/css" />
        <script src="/lib/zepto.js" type="text/javascript"></script>
        <script src="/lib/ansi_up.js" type="text/javascript"></script>
        <script>
            var fetchArgs = null;
            var fetching = false;
            var activeIntervalId = null;
            function fetch(id) {
                fetchArgs = {
                    type: id.split("/").shift(),
                    id: id.split("/").slice(1).join("/"),
                    offset: 0
                };
                var intervalId = null;
                var firstFetch = true;
                function fetch() {
                    if (!fetchArgs) {
                        return clearLog();
                    }
                    var args = {};
                    for (var name in fetchArgs) {
                        args[name] = fetchArgs[name];
                    }
                    if (fetching) return;
                    fetching = true;
                    $.ajax({
                        type: "POST",
                        url: "/" + fetchArgs.type + "/fetch",
                        data: JSON.stringify(args),
                        dataType: "json",
                        contentType: "application/json",
                        success: function(data, textStatus, jqXHR) {
                            if (intervalId != activeIntervalId) {
                                fetching = false;
                                return;
                            }
                            if (firstFetch) {
                                parent.postMessage({
                                    action: "SYNC_MENU",
                                    startOffset: data.startOffset
                                }, "*");
                            }
                            parent.postMessage({
                                action: "SYNC_MENU",
                                size: data.size
                            }, "*");
                            if (fetchArgs) {
                                fetchArgs.offset = data.offset;
                                if (data.data !== "") {
                                    var logData = data.data;
/*
                                    if (!/^identity-cpp/.test(fetchArgs.channel)) {
                                        logData = logData.split(/\r?\n/).map(function(line) {
                                            var matchLine = line.toLowerCase();
                                            if (matchLine.indexOf("err") >= 0 || matchLine.indexOf("error") >= 0) {
                                                line = line.replace(/^(\[[^\]]*\])(.*)/, "$1" + "\033[1;31m" + "$2" + "\033[0m");
                                            } else
                                            if (matchLine.indexOf("-----") >= 0 || matchLine.indexOf("#####") >= 0 || matchLine.indexOf("*****") >= 0) {
                                                line = line.replace(/^(\[[^\]]*\])(.*)/, "$1" + "\033[1;34m" + "$2" + "\033[0m");
                                            }
                                            line = line.replace(/^(\[[^\]]*\])/, "\033[33m" + "$1" + "\033[0m");
                                            return line;
                                        }).join("\n");
                                    }
*/
                                    logData = window.ansi_up.ansi_to_html(logData);//.replace(/\r?\n/g, "<br/>\n");
                                    if (firstFetch) {
                                        clearLog();
                                    }
                                    appendToLog(logData);
                                } else
                                if (fetchArgs.offset === 0) {
                                    clearLog();
                                    appendToLog("No Data");
                                }
                            } else
                            if (firstFetch) {
                                clearLog();
                            }
                            firstFetch = false;
                            fetching = false;
                        }
                    });
                }
                if (activeIntervalId) {
                    clearInterval(activeIntervalId);
                }
                activeIntervalId = intervalId = setInterval(fetch, 5000);
                return fetch();
            }
            function clearLog() {
                $("body").html("");
            }
            function appendToLog(html) {
                $("body").append(html);
            }
            function ready() {
                window.addEventListener("message", function(event) {
                    if (typeof event.data === "string") {
                        if (event.data === "PRINT") {
                            window.print();
                        }
                    } else
                	if (typeof event.data === "object") {
                        if (event.data.action === "APPEND_HTML") {
                    		appendToLog(event.data.html);
                        } else
                        if (event.data.action === "FETCH_LOG") {
                            fetch(event.data.id);
                        }
                	}
                }, false);
            	parent.postMessage("LOG_BLANK_PAGE_LOADED", "*");
            }
         
        </script>
    </head>
    <body onload="ready()"></body>
</html>